digraph syncScopeFSA{
    splines=ortho;
    node [shape = doublecircle]; InitialState SB_Exit;
    node [shape = circle, fontcolor=white, fillcolor=darkslategrey, style="filled"]; SB_OutOfTasks SB_CheckTask SB_Steal SB_SuccessfulTheft;
    InitialState -> SB_CheckTask [color="black:invis:black", xlabel="entry point"];
    node [shape = octagon, fontcolor=black, fillcolor=lightsteelblue, style="rounded,filled"]; SB_CheckTask_SBE_HasTask SB_Steal_SBE_ReceivedTask ;
    node [shape = diamond, fontcolor=black, fillcolor=coral, style="rounded,filled"]; SB_OutOfTasks_SBE_NoDescendants SB_CheckTask_SBE_NoDescendants SB_Steal_SBE_NoDescendants ;
    SB_CheckTask_SBE_HasTask [label="SBE_HasTask\nnot isNil(task)"];
    SB_Steal_SBE_ReceivedTask [label="SBE_ReceivedTask\nlootedTask"];
    SB_OutOfTasks_SBE_NoDescendants [label="SBE_NoDescendants\nhasDescendantTasks(scopedBarrier)"];
    SB_CheckTask_SBE_NoDescendants [label="SBE_NoDescendants\nhasDescendantTasks(scopedBarrier)"];
    SB_Steal_SBE_NoDescendants [label="SBE_NoDescendants\nhasDescendantTasks(scopedBarrier)"];
    SB_OutOfTasks -> SB_OutOfTasks_SBE_NoDescendants[style=bold, xlabel="always"];
    SB_OutOfTasks_SBE_NoDescendants -> SB_Exit [color="coral", fontcolor="coral", xlabel="interrupted"];
    SB_OutOfTasks_SBE_NoDescendants -> SB_Steal [xlabel="default"];
    SB_CheckTask -> SB_CheckTask_SBE_NoDescendants[style=bold, xlabel="always"];
    SB_CheckTask_SBE_NoDescendants -> SB_Exit [color="coral", fontcolor="coral", xlabel="interrupted"];
    SB_CheckTask_SBE_NoDescendants -> SB_CheckTask_SBE_HasTask[xlabel="normal flow"];
    SB_CheckTask_SBE_HasTask -> SB_CheckTask [style=dashed, xlabel="true"];
    SB_CheckTask_SBE_HasTask -> SB_OutOfTasks [xlabel="default"];
    SB_Steal -> SB_Steal_SBE_NoDescendants[style=bold, xlabel="always"];
    SB_Steal_SBE_NoDescendants -> SB_Exit [color="coral", fontcolor="coral", xlabel="interrupted"];
    SB_Steal_SBE_NoDescendants -> SB_Steal_SBE_ReceivedTask[xlabel="normal flow"];
    SB_Steal_SBE_ReceivedTask -> SB_SuccessfulTheft [style=dashed, xlabel="true"];
    SB_Steal_SBE_ReceivedTask -> SB_Steal [xlabel="default"];
    SB_SuccessfulTheft -> SB_OutOfTasks [xlabel="default"];
}